
package uk.org.siri.wsdl;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import uk.org.siri.siri.CapabilitiesRequestStructure;
import uk.org.siri.siri.CapabilitiesResponseStructure;
import uk.org.siri.siri.CheckStatusRequestStructure;
import uk.org.siri.siri.CheckStatusResponseBodyStructure;
import uk.org.siri.siri.ConnectionLinksDeliveryStructure;
import uk.org.siri.siri.ConnectionLinksDiscoveryRequestStructure;
import uk.org.siri.siri.ConnectionMonitoringDeliveriesStructure;
import uk.org.siri.siri.ConnectionMonitoringRequestStructure;
import uk.org.siri.siri.ConnectionTimetableDeliveriesStructure;
import uk.org.siri.siri.ConnectionTimetableRequestStructure;
import uk.org.siri.siri.ConsumerRequestEndpointStructure;
import uk.org.siri.siri.DataSupplyRequestBodyStructure;
import uk.org.siri.siri.EstimatedTimetableDeliveriesStructure;
import uk.org.siri.siri.EstimatedTimetableRequestStructure;
import uk.org.siri.siri.ExtensionsStructure;
import uk.org.siri.siri.FacilityMonitoringDeliveriesStructure;
import uk.org.siri.siri.FacilityMonitoringRequestStructure;
import uk.org.siri.siri.GeneralMessageDeliveriesStructure;
import uk.org.siri.siri.GeneralMessageRequestStructure;
import uk.org.siri.siri.LinesDeliveryStructure;
import uk.org.siri.siri.LinesDiscoveryRequestStructure;
import uk.org.siri.siri.ProducerResponseEndpointStructure;
import uk.org.siri.siri.ProductionTimetableDeliveriesStructure;
import uk.org.siri.siri.ProductionTimetableRequestStructure;
import uk.org.siri.siri.RequestStructure;
import uk.org.siri.siri.ResponseEndpointStructure;
import uk.org.siri.siri.ServiceDeliveryBodyStructure;
import uk.org.siri.siri.ServiceDeliveryStructure;
import uk.org.siri.siri.ServiceRequestStructure;
import uk.org.siri.siri.SiriSubscriptionRequestStructure;
import uk.org.siri.siri.SituationExchangeDeliveriesStructure;
import uk.org.siri.siri.SituationExchangeRequestStructure;
import uk.org.siri.siri.StopMonitoringDeliveriesStructure;
import uk.org.siri.siri.StopMonitoringMultipleRequestStructure;
import uk.org.siri.siri.StopMonitoringRequestStructure;
import uk.org.siri.siri.StopPointsDeliveryStructure;
import uk.org.siri.siri.StopPointsDiscoveryRequestStructure;
import uk.org.siri.siri.StopTimetableDeliveriesStructure;
import uk.org.siri.siri.StopTimetableRequestStructure;
import uk.org.siri.siri.SubscriptionResponseBodyStructure;
import uk.org.siri.siri.TerminateSubscriptionRequestBodyStructure;
import uk.org.siri.siri.TerminateSubscriptionResponseStructure;
import uk.org.siri.siri.VehicleMonitoringDeliveriesStructure;
import uk.org.siri.siri.VehicleMonitoringRequestStructure;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SiriProducerDocPort", targetNamespace = "http://wsdl.siri.org.uk")
@XmlSeeAlso({
    uk.org.siri.siri.ObjectFactory.class,
    eu.datex2.schema._2_0rc1._2_0.ObjectFactory.class,
    uk.org.ifopt.acsb.ObjectFactory.class,
    uk.org.ifopt.ifopt.ObjectFactory.class,
    uk.org.siri.wsdl.ObjectFactory.class
})
public interface SiriProducerDocPort {


    /**
     * 
     * @param request
     * @param answer
     * @param requestExtension
     * @param subscriptionRequestInfo
     * @param subscriptionAnswerInfo
     * @param answerExtension
     * @throws SubscriptionError
     */
    @WebMethod(operationName = "Subscribe", action = "Subscribe")
    @RequestWrapper(localName = "Subscribe", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsSubscriptionRequestStructure")
    @ResponseWrapper(localName = "SubscribeResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsSubscriptionAnswerStructure")
    public void subscribe(
        @WebParam(name = "SubscriptionRequestInfo", targetNamespace = "")
        WsSubscriptionRequestInfoStructure subscriptionRequestInfo,
        @WebParam(name = "Request", targetNamespace = "")
        SiriSubscriptionRequestStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "SubscriptionAnswerInfo", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseEndpointStructure> subscriptionAnswerInfo,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<SubscriptionResponseBodyStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws SubscriptionError
    ;

    /**
     * 
     * @param request
     * @param deleteSubscriptionInfo
     * @param answer
     * @param requestExtension
     * @param deleteSubscriptionAnswerInfo
     * @param answerExtension
     * @throws DeleteSubscriptionError
     */
    @WebMethod(operationName = "DeleteSubscription", action = "DeleteSubscription")
    @RequestWrapper(localName = "DeleteSubscription", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsDeleteSubscriptionRequestStructure")
    @ResponseWrapper(localName = "DeleteSubscriptionResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsDeleteSubscriptionAnswerStructure")
    public void deleteSubscription(
        @WebParam(name = "DeleteSubscriptionInfo", targetNamespace = "")
        RequestStructure deleteSubscriptionInfo,
        @WebParam(name = "Request", targetNamespace = "")
        TerminateSubscriptionRequestBodyStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "DeleteSubscriptionAnswerInfo", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseEndpointStructure> deleteSubscriptionAnswerInfo,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<TerminateSubscriptionResponseStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws DeleteSubscriptionError
    ;

    /**
     * 
     * @param request
     * @param dataSupplyRequestInfo
     * @param answer
     * @param requestExtension
     * @param dataSupplyAnswerInfo
     * @param answerExtension
     * @throws DataSupplyError
     */
    @WebMethod(operationName = "DataSupply", action = "DataSupply")
    @RequestWrapper(localName = "DataSupply", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsDataSupplyRequestStructure")
    @ResponseWrapper(localName = "DataSupplyResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsDataSupplyAnswerStructure")
    public void dataSupply(
        @WebParam(name = "DataSupplyRequestInfo", targetNamespace = "")
        ConsumerRequestEndpointStructure dataSupplyRequestInfo,
        @WebParam(name = "Request", targetNamespace = "")
        DataSupplyRequestBodyStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "DataSupplyAnswerInfo", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ProducerResponseEndpointStructure> dataSupplyAnswerInfo,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ServiceDeliveryBodyStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws DataSupplyError
    ;

    /**
     * 
     * @param request
     * @param checkStatusAnswerInfo
     * @param answer
     * @param requestExtension
     * @param answerExtension
     * @throws CheckStatusError
     */
    @WebMethod(operationName = "CheckStatus", action = "CheckStatus")
    @RequestWrapper(localName = "CheckStatus", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsCheckStatusStructure")
    @ResponseWrapper(localName = "CheckStatusResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsCheckStatusResponseStructure")
    public void checkStatus(
        @WebParam(name = "Request", targetNamespace = "")
        CheckStatusRequestStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "CheckStatusAnswerInfo", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ProducerResponseEndpointStructure> checkStatusAnswerInfo,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<CheckStatusResponseBodyStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws CheckStatusError
    ;

    /**
     * 
     * @param request
     * @param answer
     * @param requestExtension
     * @param serviceRequestInfo
     * @param answerExtension
     * @param serviceDeliveryInfo
     * @throws ProductionTimetableError
     */
    @WebMethod(operationName = "GetProductionTimetable", action = "GetProductionTimetable")
    @RequestWrapper(localName = "GetProductionTimetable", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.ProductionTimetableRequestStructure")
    @ResponseWrapper(localName = "GetProductionTimetableResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.ProductionTimetableAnswerStructure")
    public void getProductionTimetable(
        @WebParam(name = "ServiceRequestInfo", targetNamespace = "")
        WsServiceRequestInfoStructure serviceRequestInfo,
        @WebParam(name = "Request", targetNamespace = "")
        ProductionTimetableRequestStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "ServiceDeliveryInfo", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ProducerResponseEndpointStructure> serviceDeliveryInfo,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ProductionTimetableDeliveriesStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws ProductionTimetableError
    ;

    /**
     * 
     * @param request
     * @param answer
     * @param requestExtension
     * @param serviceRequestInfo
     * @param answerExtension
     * @param serviceDeliveryInfo
     * @throws EstimatedTimetableError
     */
    @WebMethod(operationName = "GetEstimatedTimetable", action = "GetEstimatedTimetable")
    @RequestWrapper(localName = "GetEstimatedTimetable", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsEstimatedTimetableRequestStructure")
    @ResponseWrapper(localName = "GetEstimatedTimetableResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsEstimatedTimetableAnswerStructure")
    public void getEstimatedTimetable(
        @WebParam(name = "ServiceRequestInfo", targetNamespace = "")
        WsServiceRequestInfoStructure serviceRequestInfo,
        @WebParam(name = "Request", targetNamespace = "")
        EstimatedTimetableRequestStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "ServiceDeliveryInfo", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ProducerResponseEndpointStructure> serviceDeliveryInfo,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<EstimatedTimetableDeliveriesStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws EstimatedTimetableError
    ;

    /**
     * 
     * @param request
     * @param answer
     * @param requestExtension
     * @param serviceRequestInfo
     * @param answerExtension
     * @param serviceDeliveryInfo
     * @throws StopTimetableError
     */
    @WebMethod(operationName = "GetStopTimetable", action = "GetStopTimetable")
    @RequestWrapper(localName = "GetStopTimetable", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.StopTimetableRequestStructure")
    @ResponseWrapper(localName = "GetStopTimetableResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.StopTimetableAnswerStructure")
    public void getStopTimetable(
        @WebParam(name = "ServiceRequestInfo", targetNamespace = "")
        WsServiceRequestInfoStructure serviceRequestInfo,
        @WebParam(name = "Request", targetNamespace = "")
        StopTimetableRequestStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "ServiceDeliveryInfo", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ProducerResponseEndpointStructure> serviceDeliveryInfo,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<StopTimetableDeliveriesStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws StopTimetableError
    ;

    /**
     * 
     * @param request
     * @param answer
     * @param requestExtension
     * @param serviceRequestInfo
     * @param answerExtension
     * @param serviceDeliveryInfo
     * @throws StopMonitoringError
     */
    @WebMethod(operationName = "GetStopMonitoring", action = "GetStopMonitoring")
    @RequestWrapper(localName = "GetStopMonitoring", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.StopMonitoringRequestStructure")
    @ResponseWrapper(localName = "GetStopMonitoringResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.StopMonitoringAnswerStructure")
    public void getStopMonitoring(
        @WebParam(name = "ServiceRequestInfo", targetNamespace = "")
        WsServiceRequestInfoStructure serviceRequestInfo,
        @WebParam(name = "Request", targetNamespace = "")
        StopMonitoringRequestStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "ServiceDeliveryInfo", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ProducerResponseEndpointStructure> serviceDeliveryInfo,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<StopMonitoringDeliveriesStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws StopMonitoringError
    ;

    /**
     * GetMultipleStopMonitoring deprecated from Siri 2.0 (use GetSiriService instead)
     * 
     * @param request
     * @param answer
     * @param requestExtension
     * @param serviceRequestInfo
     * @param answerExtension
     * @param serviceDeliveryInfo
     * @throws StopMonitoringError
     */
    @WebMethod(operationName = "GetMultipleStopMonitoring", action = "GetMultipleStopMonitoring")
    @RequestWrapper(localName = "GetMultipleStopMonitoring", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.StopMonitoringMultipleRequestStructure")
    @ResponseWrapper(localName = "GetMultipleStopMonitoringResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.StopMonitoringAnswerStructure")
    public void getMultipleStopMonitoring(
        @WebParam(name = "ServiceRequestInfo", targetNamespace = "")
        WsServiceRequestInfoStructure serviceRequestInfo,
        @WebParam(name = "Request", targetNamespace = "")
        StopMonitoringMultipleRequestStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "ServiceDeliveryInfo", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ProducerResponseEndpointStructure> serviceDeliveryInfo,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<StopMonitoringDeliveriesStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws StopMonitoringError
    ;

    /**
     * 
     * @param request
     * @param answer
     * @param requestExtension
     * @param serviceRequestInfo
     * @param answerExtension
     * @param serviceDeliveryInfo
     * @throws VehicleMonitoringError
     */
    @WebMethod(operationName = "GetVehicleMonitoring", action = "GetVehicleMonitoring")
    @RequestWrapper(localName = "GetVehicleMonitoring", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.VehicleMonitoringRequestStructure")
    @ResponseWrapper(localName = "GetVehicleMonitoringResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.VehicleMonitoringAnswerStructure")
    public void getVehicleMonitoring(
        @WebParam(name = "ServiceRequestInfo", targetNamespace = "")
        WsServiceRequestInfoStructure serviceRequestInfo,
        @WebParam(name = "Request", targetNamespace = "")
        VehicleMonitoringRequestStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "ServiceDeliveryInfo", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ProducerResponseEndpointStructure> serviceDeliveryInfo,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<VehicleMonitoringDeliveriesStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws VehicleMonitoringError
    ;

    /**
     * 
     * @param request
     * @param answer
     * @param requestExtension
     * @param serviceRequestInfo
     * @param answerExtension
     * @param serviceDeliveryInfo
     * @throws ConnectionTimetableError
     */
    @WebMethod(operationName = "GetConnectionTimetable", action = "GetConnectionTimetable")
    @RequestWrapper(localName = "GetConnectionTimetable", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsConnectionTimetableRequestStructure")
    @ResponseWrapper(localName = "GetConnectionTimetableResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsConnectionTimetableAnswerStructure")
    public void getConnectionTimetable(
        @WebParam(name = "ServiceRequestInfo", targetNamespace = "")
        WsServiceRequestInfoStructure serviceRequestInfo,
        @WebParam(name = "Request", targetNamespace = "")
        ConnectionTimetableRequestStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "ServiceDeliveryInfo", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ProducerResponseEndpointStructure> serviceDeliveryInfo,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ConnectionTimetableDeliveriesStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws ConnectionTimetableError
    ;

    /**
     * 
     * @param request
     * @param answer
     * @param requestExtension
     * @param serviceRequestInfo
     * @param answerExtension
     * @param serviceDeliveryInfo
     * @throws ConnectionMonitoringError
     */
    @WebMethod(operationName = "GetConnectionMonitoring", action = "GetConnectionMonitoring")
    @RequestWrapper(localName = "GetConnectionMonitoring", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsConnectionMonitoringRequestStructure")
    @ResponseWrapper(localName = "GetConnectionMonitoringResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsConnectionMonitoringAnswerStructure")
    public void getConnectionMonitoring(
        @WebParam(name = "ServiceRequestInfo", targetNamespace = "")
        WsServiceRequestInfoStructure serviceRequestInfo,
        @WebParam(name = "Request", targetNamespace = "")
        ConnectionMonitoringRequestStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "ServiceDeliveryInfo", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ProducerResponseEndpointStructure> serviceDeliveryInfo,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ConnectionMonitoringDeliveriesStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws ConnectionMonitoringError
    ;

    /**
     * 
     * @param request
     * @param answer
     * @param requestExtension
     * @param serviceRequestInfo
     * @param answerExtension
     * @param serviceDeliveryInfo
     * @throws GeneralMessageError
     */
    @WebMethod(operationName = "GetGeneralMessage", action = "GetGeneralMessage")
    @RequestWrapper(localName = "GetGeneralMessage", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.GeneralMessageRequestStructure")
    @ResponseWrapper(localName = "GetGeneralMessageResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.GeneralMessageAnswerStructure")
    public void getGeneralMessage(
        @WebParam(name = "ServiceRequestInfo", targetNamespace = "")
        WsServiceRequestInfoStructure serviceRequestInfo,
        @WebParam(name = "Request", targetNamespace = "")
        GeneralMessageRequestStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "ServiceDeliveryInfo", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ProducerResponseEndpointStructure> serviceDeliveryInfo,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<GeneralMessageDeliveriesStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws GeneralMessageError
    ;

    /**
     * 
     * @param request
     * @param answer
     * @param requestExtension
     * @param serviceRequestInfo
     * @param answerExtension
     * @param serviceDeliveryInfo
     * @throws FacilityMonitoringError
     */
    @WebMethod(operationName = "GetFacilityMonitoring", action = "GetFacilityMonitoring")
    @RequestWrapper(localName = "GetFacilityMonitoring", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsFacilityMonitoringRequestStructure")
    @ResponseWrapper(localName = "GetFacilityMonitoringResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsFacilityMonitoringAnswerStructure")
    public void getFacilityMonitoring(
        @WebParam(name = "ServiceRequestInfo", targetNamespace = "")
        WsServiceRequestInfoStructure serviceRequestInfo,
        @WebParam(name = "Request", targetNamespace = "")
        FacilityMonitoringRequestStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "ServiceDeliveryInfo", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ProducerResponseEndpointStructure> serviceDeliveryInfo,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<FacilityMonitoringDeliveriesStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws FacilityMonitoringError
    ;

    /**
     * 
     * @param request
     * @param answer
     * @param requestExtension
     * @param serviceRequestInfo
     * @param answerExtension
     * @param serviceDeliveryInfo
     * @throws SituationExchangeError
     */
    @WebMethod(operationName = "GetSituationExchange", action = "GetSituationExchange")
    @RequestWrapper(localName = "GetSituationExchange", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.SituationExchangeRequestStructure")
    @ResponseWrapper(localName = "GetSituationExchangeResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.SituationExchangeAnswerStructure")
    public void getSituationExchange(
        @WebParam(name = "ServiceRequestInfo", targetNamespace = "")
        WsServiceRequestInfoStructure serviceRequestInfo,
        @WebParam(name = "Request", targetNamespace = "")
        SituationExchangeRequestStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "ServiceDeliveryInfo", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ProducerResponseEndpointStructure> serviceDeliveryInfo,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<SituationExchangeDeliveriesStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws SituationExchangeError
    ;

    /**
     * 
     * @param request
     * @param answer
     * @param requestExtension
     * @param answerExtension
     * @throws GetCapabilitiesError
     */
    @WebMethod(operationName = "GetCapabilities", action = "GetCapabilities")
    @RequestWrapper(localName = "GetCapabilities", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsGetCapabilitiesRequestStructure")
    @ResponseWrapper(localName = "GetCapabilitiesResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsGetCapabilitiesAnswerStructure")
    public void getCapabilities(
        @WebParam(name = "Request", targetNamespace = "")
        CapabilitiesRequestStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<CapabilitiesResponseStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws GetCapabilitiesError
    ;

    /**
     * SIRI 2.x : Single access to any SIRI Service
     * 
     * @param request
     * @return
     *     returns uk.org.siri.siri.ServiceDeliveryStructure
     */
    @WebMethod(operationName = "GetSiriService", action = "GetSiriService")
    @WebResult(name = "Answer", targetNamespace = "")
    @RequestWrapper(localName = "GetSiriService", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.GetSiriServiceRequestStructure")
    @ResponseWrapper(localName = "GetSiriServiceResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.GetSiriServiceAnswerStructure")
    public ServiceDeliveryStructure getSiriService(
        @WebParam(name = "Request", targetNamespace = "")
        ServiceRequestStructure request);

    /**
     * 
     * @param request
     * @param answer
     * @param requestExtension
     * @param answerExtension
     * @throws StopPointsDiscoveryError
     */
    @WebMethod(operationName = "StopPointsDiscovery", action = "StopPointsDiscovery")
    @RequestWrapper(localName = "StopPointsDiscovery", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsStopPointsDiscoveryStructure")
    @ResponseWrapper(localName = "StopPointsDiscoveryResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsStopPointsDiscoveryAnswerStructure")
    public void stopPointsDiscovery(
        @WebParam(name = "Request", targetNamespace = "")
        StopPointsDiscoveryRequestStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<StopPointsDeliveryStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws StopPointsDiscoveryError
    ;

    /**
     * 
     * @param request
     * @param answer
     * @param requestExtension
     * @param answerExtension
     * @throws LinesDiscoveryError
     */
    @WebMethod(operationName = "LinesDiscovery", action = "LinesDiscovery")
    @RequestWrapper(localName = "LinesDiscovery", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsLinesDiscoveryStructure")
    @ResponseWrapper(localName = "LinesDiscoveryResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsLinesDiscoveryAnswerStructure")
    public void linesDiscovery(
        @WebParam(name = "Request", targetNamespace = "")
        LinesDiscoveryRequestStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<LinesDeliveryStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws LinesDiscoveryError
    ;

    /**
     * 
     * @param request
     * @param answer
     * @param requestExtension
     * @param answerExtension
     * @throws ConnectionLinksDiscoveryError
     */
    @WebMethod(operationName = "ConnectionLinksDiscovery", action = "ConnectionLinksDiscovery")
    @RequestWrapper(localName = "ConnectionLinksDiscovery", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsConnectionLinksDiscoveryStructure")
    @ResponseWrapper(localName = "ConnectionLinksDiscoveryResponse", targetNamespace = "http://wsdl.siri.org.uk", className = "uk.org.siri.wsdl.WsConnectionLinksDiscoveryAnswerStructure")
    public void connectionLinksDiscovery(
        @WebParam(name = "Request", targetNamespace = "")
        ConnectionLinksDiscoveryRequestStructure request,
        @WebParam(name = "RequestExtension", targetNamespace = "")
        ExtensionsStructure requestExtension,
        @WebParam(name = "Answer", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ConnectionLinksDeliveryStructure> answer,
        @WebParam(name = "AnswerExtension", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ExtensionsStructure> answerExtension)
        throws ConnectionLinksDiscoveryError
    ;

}
